/**
 *  Daisy - v1.0.0 
 *  A daisy-chainable JavaScript money calculator 
 *  https://github.com/arecker/Daisy.git 
 **/
var daisy=function(){!function(){Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)}),Array.prototype.reduce||(Array.prototype.reduce=function(a){"use strict";if(null==this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof a)throw new TypeError(a+" is not a function");var b,c=Object(this),d=c.length>>>0,e=0;if(2===arguments.length)b=arguments[1];else{for(;d>e&&!(e in c);)e++;if(e>=d)throw new TypeError("Reduce of empty array with no initial value");b=c[e++]}for(;d>e;e++)e in c&&(b=a(b,c[e],e,c));return b})}();var a=function(a){this.name="DaisyException",this.message=a},b=function(b,c){var d=Number(b);if(isNaN(d)){if(c.supressInvalidNumbers)return 0;throw new a("'"+b+"' is not a valid number")}return d},c=function(a,c,d){return a=b(a,d),c=b(c,d),0===a?c:0===c?a:Math.abs(a)===Math.abs(c)&&(0>a&&c>0||0>c&&a>0)?0:a+c},d=function(a,c,d){return a=b(a,d),c=b(c,d),0===a?-c:0===c?a:a===c?0:a-c},e=function(a,c,d){return a=b(a,d),c=b(c,d),0===a?0:0===c?0:1===a?c:1===c?a:a*c},f=function(c,d,e){if(d=b(d),c=b(c),0===d){if(e.supressDivideByZero)return 0;throw new a("divided '"+c+"' by zero")}return 1===d?c:0===c?0:c===d?1:c/d},g=function(a,b){this.currentVal=a+"",this.options=b||{}};g.prototype.equals=function(){var a=b(this.currentVal,this.options).toFixed(2)+"";return this.options.printDollarSign&&(a="$"+a),a},g.prototype.plus=function(a){return this.currentVal=c(this.currentVal,a,this.options),this},g.prototype.minus=function(a){return this.currentVal=d(this.currentVal,a,this.options),this},g.prototype.times=function(a){return this.currentVal=e(this.currentVal,a,this.options),this},g.prototype.dividedBy=function(a){return this.currentVal=f(this.currentVal,a,this.options),this};var h=function(a,b){this.currentSet=a,this.options=b||{}};return h.prototype.sum=function(){var b=this;if(0===b.currentSet.length)throw new a("cannot operate on empty set");return new g(b.currentSet.reduce(function(a,d){return c(a,d,b.options)}))},h.prototype.average=function(){var b=this;if(0===this.currentSet.length)throw new a("cannot operate on empty set");var d=this.currentSet.reduce(function(a,d){return c(a,d,b.options)})/b.currentSet.length;return new g(d)},h.prototype.max=function(){var c,d;if(0===this.currentSet.length)throw new a("cannot operate on empty set");if(!this.options.supressInvalidNumbers)return new g(Math.max.apply(null,this.currentSet));for(d=b(this.currentSet[0],this.options),c=0;c<this.currentSet.length;c++)currentVal=b(this.currentSet[c],this.options),d<currentVal&&(d=currentVal);return new g(d)},h.prototype.min=function(){var c,d;if(0===this.currentSet.length)throw new a("cannot operate on empty set");if(!this.options.supressInvalidNumbers)return new g(Math.min.apply(null,this.currentSet));for(d=b(this.currentSet[0],this.options),c=0;c<this.currentSet.length;c++)currentVal=b(this.currentSet[c],this.options),d>currentVal&&(d=currentVal);return new g(d)},function(a,b){return Array.isArray(a)?new h(a,b):new g(a,b)}}();